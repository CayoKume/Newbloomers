// <auto-generated />
using System;
using Infrastructure.AfterSale.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.AfterSale.Data.Migrations.SqlServer
{
    [DbContext(typeof(AfterSaleTreatedDbContext))]
    [Migration("20250721161616_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AfterSale.Entities.Parameters", b =>
                {
                    b.Property<string>("doc_company")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CNPJ_EMP");

                    b.Property<Guid?>("Token")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TOKEN");

                    b.HasKey("doc_company");

                    b.ToTable("Parametros_AfterSale", "general");

                    b.HasData(
                        new
                        {
                            doc_company = "38367316000199",
                            Token = new Guid("69ea80a0-0472-11ee-993e-37eecaae1115")
                        },
                        new
                        {
                            doc_company = "42538267000268",
                            Token = new Guid("56dfd210-0472-11ee-bfa0-99577f33d6f0")
                        });
                });

            modelBuilder.Entity("Domain.AfterSale.Entities.Tracking", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("authorization_code")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("collect_date")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("courier_contract_id")
                        .HasColumnType("int");

                    b.Property<string>("courier_name")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("cte")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("delivery_deadline")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("expire_date")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("extra_fields")
                        .HasColumnType("varchar(60)");

                    b.Property<bool?>("is_change_collect_to_post")
                        .HasColumnType("bit")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("message")
                        .HasColumnType("varchar(60)");

                    b.Property<decimal?>("package_amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("qr_code")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("requested_collect_date")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("reverse_id")
                        .HasColumnType("int");

                    b.Property<string>("service_type")
                        .HasColumnType("varchar(60)");

                    b.Property<decimal?>("shipping_amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("status")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("status_updated_at")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("tracking_code")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("tracking_url")
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("type")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.HasKey("id");

                    b.ToTable("AfterSaleTrackings", "general");
                });
#pragma warning restore 612, 618
        }
    }
}
